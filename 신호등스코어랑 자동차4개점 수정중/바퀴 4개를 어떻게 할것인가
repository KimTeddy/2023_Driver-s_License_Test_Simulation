#include <GL/glut.h>

float xcar = 0.0, ycar = 0.0;

void drawCarPoints() {
    // Draw Point 1
    glPointSize(10.0f);
    glColor3f(1.0, 0.0, 0.0);
    glBegin(GL_POINTS);
    glVertex3f(xcar, 1.0, ycar);
    glEnd();

    // Draw Point 2
    glColor3f(0.0, 1.0, 0.0);
    glBegin(GL_POINTS);
    glVertex3f(xcar - 5.0, 1.0, ycar - 2.0);
    glEnd();

    // Draw Point 3
    glColor3f(0.0, 0.0, 1.0);
    glBegin(GL_POINTS);
    glVertex3f(xcar - 5.0, 1.0, ycar + 2.0);
    glEnd();

    // Draw Point 4
    glColor3f(1.0, 1.0, 0.0);
    glBegin(GL_POINTS);
    glVertex3f(xcar + 5.0, 1.0, ycar + 2.0);
    glEnd();

    // Draw Point 5
    glColor3f(1.0, 0.0, 1.0);
    glBegin(GL_POINTS);
    glVertex3f(xcar + 5.0, 1.0, ycar - 2.0);
    glEnd();
}

void drawGround() {
    glPushMatrix();
    glColor3f(0.5, 0.5, 0.5);
    glTranslatef(0.0, -0.5, 0.0);
    glScalef(100.0, 1.0, 60.0);
    glutSolidCube(1.0);

    glPushMatrix();
    glColor3f(0.1, 0.1, 0.1);
    glLineWidth(2);
    glutWireCube(1.0);
    glPopMatrix();
    glPopMatrix();
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

    glLoadIdentity();
    gluLookAt(0.0, 30.0, 60.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0);
    drawCarPoints();
    drawGround();

    glutSwapBuffers();
}

void reshape(int w, int h) {
    glViewport(0, 0, w, h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(45.0, (float)w / (float)h, 1.0, 100.0);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
    glutInitWindowSize(1024, 768);
    glutInitWindowPosition(0, 0);
    glutCreateWindow("Car Points and Ground");
    glEnable(GL_DEPTH_TEST);
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    glutMainLoop();
    return 0;
}
